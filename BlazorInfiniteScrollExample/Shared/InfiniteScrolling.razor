@using Ljbc1994.Blazor.IntersectionObserver;
@typeparam TItem
@inject IIntersectionObserverService _observerService

<ul class="m-0 p-0">
	<Virtualize Items="Items" Context="item">
		@ChildContent(item)
	</Virtualize>
	<span @ref="_targetElement" class="p-2"></span>
</ul>
@if(_isLoading)
{
	<div class="text-center my-4">
		<div class="spinner-border" role="status">
			<span class="sr-only"></span>
		</div>
	</div>
}

@code {

	[Parameter]
	public RenderFragment<TItem> ChildContent { get; set; }
	[Parameter]
	public EventCallback ObservableTargetReached { get; set; }
	[Parameter]
	public ICollection<TItem> Items { get; set; }

	private ElementReference _targetElement { get; set; }
	private bool _isLoading = true;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
			await SetupObserver();
	}

	public async Task OnIntersection()
	{
		_isLoading = true;
		await ObservableTargetReached.InvokeAsync();
		_isLoading = false;
		StateHasChanged();
	}

	private async Task SetupObserver()
    {
        await _observerService.Observe(_targetElement, async (entries) =>
        {
			await OnIntersection();
        });
    }

}
